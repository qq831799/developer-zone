"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[1567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"v3.x.x","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Overview","href":"/","docId":"Getting Started/Overview","unlisted":false},{"type":"link","label":"Try out Hello Plugin","href":"/Getting Started/Try out Hello Plugin","docId":"Getting Started/Try out Hello Plugin","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Main Concept","items":[{"type":"link","label":"Architecture","href":"/Main Concept/Architecture","docId":"Main Concept/Architecture","unlisted":false},{"type":"link","label":"Features","href":"/Main Concept/Features","docId":"Main Concept/Features","unlisted":false},{"type":"link","label":"API Overview","href":"/Main Concept/API Overview","docId":"Main Concept/API Overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Create a Plugin","href":"/Create a Plugin","docId":"Create a Plugin","unlisted":false},{"type":"link","label":"Build a Plugin Package","href":"/Build a Plugin Package","docId":"Build a Plugin Package","unlisted":false},{"type":"category","label":"Implement Features","items":[{"type":"link","label":"Properties","href":"/Implement Features/Properties","docId":"Implement Features/Properties","unlisted":false},{"type":"link","label":"States","href":"/Implement Features/States","docId":"Implement Features/States","unlisted":false},{"type":"link","label":"Commands","href":"/Implement Features/Commands","docId":"Implement Features/Commands","unlisted":false},{"type":"link","label":"Alerts","href":"/Implement Features/Alerts","docId":"Implement Features/Alerts","unlisted":false},{"type":"link","label":"Metrics","href":"/Implement Features/Metrics","docId":"Implement Features/Metrics","unlisted":false},{"type":"link","label":"Events","href":"/Implement Features/Events","docId":"Implement Features/Events","unlisted":false},{"type":"link","label":"Configs","href":"/Implement Features/Configs","docId":"Implement Features/Configs","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Rate Limits","href":"/Rate Limits","docId":"Rate Limits","unlisted":false},{"type":"link","label":"Plugin Station Listing Guideline","href":"/Plugin Station Listing Guideline","docId":"Plugin Station Listing Guideline","unlisted":false}],"api":[{"type":"link","label":"API Reference","href":"/API Reference","docId":"API Reference","unlisted":false}]},"docs":{"API Reference":{"id":"API Reference","title":"API Reference","description":"allxoninfrasturcture","sidebar":"api"},"Build a Plugin Package":{"id":"Build a Plugin Package","title":"Build a Plugin Package","description":"A plugin package is a uniform format in which your plugin is archived. You can distribute your plugin on Allxon Plugin Station by plugin package.","sidebar":"tutorialSidebar"},"Create a Plugin":{"id":"Create a Plugin","title":"Create a Plugin","description":"Plugin creation is made easy with Hello Plugin \u2014 you can modify and create a plugin from this plugin package without having to develop a new one from scratch.","sidebar":"tutorialSidebar"},"Getting Started/Overview":{"id":"Getting Started/Overview","title":"Overview","description":"Allxon Octo SDK establishes an extensible architecture on edge devices with Allxon Agent and device plugins. The Agent handles the communication between device plugins and Allxon Cloud. The device plugin connects and controls the hardware or software modules of edge devices. By working with the Agent, information or configuration of device plugins can be managed on Allxon Portal.","sidebar":"tutorialSidebar"},"Getting Started/Try out Hello Plugin":{"id":"Getting Started/Try out Hello Plugin","title":"Try out Hello Plugin","description":"Allxon Octo SDK is implemented in C++ and is available for 3rd party developers to build plugins to connect devices to Allxon Portal. By using Allxon Octo SDK, you can build your own application to enhance the management and usability of your devices on Allxon Portal. We call the application \\"plugin\\".","sidebar":"tutorialSidebar"},"Implement Features/Alerts":{"id":"Implement Features/Alerts","title":"Alerts","description":"alert-sequence","sidebar":"tutorialSidebar"},"Implement Features/Commands":{"id":"Implement Features/Commands","title":"Commands","description":"command-sequence","sidebar":"tutorialSidebar"},"Implement Features/Configs":{"id":"Implement Features/Configs","title":"Configs","description":"config-sequence","sidebar":"tutorialSidebar"},"Implement Features/Events":{"id":"Implement Features/Events","title":"Events","description":"event-sequence","sidebar":"tutorialSidebar"},"Implement Features/Metrics":{"id":"Implement Features/Metrics","title":"Metrics","description":"metric-sequence","sidebar":"tutorialSidebar"},"Implement Features/Properties":{"id":"Implement Features/Properties","title":"Properties","description":"properties-update","sidebar":"tutorialSidebar"},"Implement Features/States":{"id":"Implement Features/States","title":"States","description":"states-sequence","sidebar":"tutorialSidebar"},"Main Concept/API Overview":{"id":"Main Concept/API Overview","title":"API Overview","description":"Allxon Octo API adopts JSON-RPC 2.0 specification over WebSocket. To communicate with Allxon Agent, you need to create a WebSocket connection wss55688 from the plugin. Then send/receive requests in the JSON format via the API.","sidebar":"tutorialSidebar"},"Main Concept/Architecture":{"id":"Main Concept/Architecture","title":"Architecture","description":"Allxon Octo SDK establishes an extensible architecture on edge devices with Allxon Agent and device plugins. The SDK includes a set of unified and integrated interfaces, which accelerates plugin development, enhances security, and facilitates and simplifies the communication between device applications and the cloud.","sidebar":"tutorialSidebar"},"Main Concept/Features":{"id":"Main Concept/Features","title":"Features","description":"There are seven types of features available in Allxon Octo SDK \u2014 Properties, States, Metrics, Events, Commands, Alerts and Configs. Once a plugin is registered with the Agent, a new tab appears on the Portal. As shown in the screenshot below, each applicable feature has a corresponding \u201ccard\u201d to display details.","sidebar":"tutorialSidebar"},"Plugin Station Listing Guideline":{"id":"Plugin Station Listing Guideline","title":"Plugin Station Listing Guideline","description":"You\u2019ve finished building your plugin, tested it, and implemented user feedback, which means your plugin is ready to be reviewed by the Allxon team, hurrah!","sidebar":"tutorialSidebar"},"Rate Limits":{"id":"Rate Limits","title":"Rate Limits","description":"Our mission is to provide a cutting-edge platform that enables users and developers to easily build and deploy plugins that optimize their business operations.","sidebar":"tutorialSidebar"}}}}')}}]);