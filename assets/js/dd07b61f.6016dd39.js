"use strict";(self.webpackChunkocto_develop_zone=self.webpackChunkocto_develop_zone||[]).push([[5173],{8693:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var s=i(4848),t=i(8453);const a={},o=void 0,r={id:"Implement Features/Configs",title:"Configs",description:"config-sequence",source:"@site/docs/Implement Features/Configs.md",sourceDirName:"Implement Features",slug:"/Implement Features/Configs",permalink:"/developer-zone/Implement Features/Configs",draft:!1,unlisted:!1,editUrl:"https://github.com/allxon/developer-zone/edit/master/docs/Implement Features/Configs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/developer-zone/Implement Features/Events"},next:{title:"Rate Limits",permalink:"/developer-zone/Rate Limits"}},l={},d=[{value:"Tutorials",id:"tutorials",level:2},{value:"Display Type",id:"display-type",level:2},{value:"String",id:"string",level:3},{value:"Datetime",id:"datetime",level:3},{value:"Switch",id:"switch",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"List",id:"list",level:3},{value:"Temperature",id:"temperature",level:3}];function c(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-sequence",src:i(5773).A+"",width:"3196",height:"1214"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," feature sequence flow is similar to that of the ",(0,s.jsx)(e.strong,{children:"Alerts"})," feature. You need to send ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"})," to initialize the ",(0,s.jsx)(e.strong,{children:"Configs"})," card on Allxon Portal. Then you can proceed to complete the settings. Once done, the plugin receives ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," for the settings."]}),"\n",(0,s.jsx)(e.h2,{id:"tutorials",children:"Tutorials"}),"\n",(0,s.jsxs)(e.p,{children:["Here is an example of creating the ",(0,s.jsx)(e.strong,{children:"Configs"})," card:"]}),"\n",(0,s.jsxs)(e.p,{children:["First, send ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:"{17-31}",children:'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginUpdate",\n  "params": {\n    "sdk": "${OCTO_SDK_VERSION}",\n    "appGUID": "${PLUGIN_APP_GUID}",\n    "appName": "${PLUGIN_NAME}",\n    "epoch": "",\n    "displayName": "plugIN Hello",\n    "type": "ib",\n    "version": "${PLUGIN_VERSION}",\n    "modules": [\n      {\n        "moduleName": "${PLUGIN_NAME}",\n        "displayName": "plugIN Hello",\n        "properties": [],\n        "configs": [\n          {\n            "name": "screenshot",\n            "displayName": "Take Screenshot",\n            "description": "automate rule when taking screenshot",\n            "displayCategory": "Management",\n            "params": [\n              {\n                "name": "Insert a Watermark",\n                "required": true,\n                "displayType": "string"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Then you can see the ",(0,s.jsx)(e.strong,{children:"Configs"})," card, as shown below."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-init",src:i(9812).A+"",width:"3094",height:"1055"})}),"\n",(0,s.jsxs)(e.p,{children:["At this time, the Config is not yet set up. The Portal sends the following ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," to the plugin for resting config configuration."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Going to deprecated format"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n  "params": {\n    "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n    "epoch": "1664866949"\n  }\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Up coming format"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n  "params": {\n    "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n    "version": "1.0.1",\n    "epoch": "1664866949",\n    "modules": [\n      {\n        "moduleName": "plugin-hello",\n        "epoch": "1664866940",\n        "configs": []\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Now let\u2019s try updating the settings of the ",(0,s.jsx)(e.strong,{children:"Configs"})," card. Use the following procedure to fill in the parameters."]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["Click ",(0,s.jsx)(e.strong,{children:"Edit"})," on the upper right corner of the card."]}),"\n",(0,s.jsxs)(e.li,{children:["Enter ",(0,s.jsx)(e.em,{children:'"my display"'})," as the parameter and click ",(0,s.jsx)(e.strong,{children:"Save"})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-set-param",src:i(7402).A+"",width:"3094",height:"1052"})}),"\n",(0,s.jsxs)(e.ol,{start:"3",children:["\n",(0,s.jsxs)(e.li,{children:["A confirmation dialog pops up. Click ",(0,s.jsx)(e.strong,{children:"Save"})," to confirm the change."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-set-finished",src:i(9906).A+"",width:"418",height:"188"})}),"\n",(0,s.jsxs)(e.p,{children:["Once done, the plugin gets notified of the configs setting update by receiving the following new ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "method": "v2/notifyPluginConfigUpdate?authorization=$argon2id$v=19$m=64,t=16,p=8$KksxWlhPbjRULHA0Yj5WYA$abdF1Vo4573+Uz5I0Xz81A",\n  "params": {\n    "appGUID": "a8e873a1-e5df-43a2-928a-745ff9c94dfb",\n    "version": "1.0.1",\n    "epoch": "1664866949",\n    "modules": [\n      {\n        "moduleName": "plugin-hello",\n        "epoch": "1664866940",\n        "configs": [\n          {\n            "name": "screenshot",\n            "params": [\n              {\n                "name": "Insert a watermark",\n                "value": "Confidentials"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.admonition,{type:"caution",children:[(0,s.jsxs)(e.p,{children:["The settings of Alerts and Configs belong to the ",(0,s.jsx)(e.strong,{children:"group-level"}),". When the user changes the Alerts/Configs settings on the Portal, the Portal deploys the changes to all the plugins in the same device group. Then Allxon Portal displays the ",(0,s.jsx)(e.strong,{children:"Alerts/Configs"})," card based on the latest plugin version in the device group and stores the latest settings."]}),(0,s.jsx)(e.p,{children:"When the plugin receives the Alerts/Configs settings, it MUST check whether the settings are supported by the current plugin version. If not supported, the plugin MUST ignore the message."})]}),"\n",(0,s.jsx)(e.h2,{id:"display-type",children:"Display Type"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card supports several parameter input types (i.e. displayType): ",(0,s.jsx)(e.a,{href:"#string",children:"string"}),", ",(0,s.jsx)(e.a,{href:"#datetime",children:"datetime"}),", ",(0,s.jsx)(e.a,{href:"#switch",children:"switch"}),", ",(0,s.jsx)(e.a,{href:"#checkbox",children:"checkbox"}),", ",(0,s.jsx)(e.a,{href:"#list",children:"list"}),", and ",(0,s.jsx)(e.a,{href:"#temperature",children:"temperature"}),". For how to set up these input types, see the following sections."]}),"\n",(0,s.jsx)(e.h3,{id:"string",children:"String"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a text box for parameter input."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n   ...\n   "configs": [\n       {\n           "name": "config1",\n           "params": [\n               {\n                   "name": "stringParam",\n                   "displayType": "string",\n                   "required": false,\n                   ...\n               },\n               ...\n           ],\n           ...\n       }\n   ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-display-type-string",src:i(3582).A+"",width:"584",height:"314"})}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is set up, ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," from the parameter input."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "stringParam",\n                                "value": "foo"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n\n'})}),"\n",(0,s.jsx)(e.h3,{id:"datetime",children:"Datetime"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a date/time picker for parameter input. You must define ",(0,s.jsx)(e.code,{children:'"displayFormat"'})," by using one of the following formats:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'"YYYY-MM-DD"'})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'"HH:MM"'})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'"YYYY-MM-DD HH:MM"'})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n    ...\n    "configs": [\n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "datetimeParam",\n                    "displayType": "datetime",\n                    "displayFormat": "HH:MM",\n                    "required": false,\n                    ...\n                },\n                ...\n            ],\n            ...\n        }\n    ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-display-type-datetime",src:i(8706).A+"",width:"588",height:"310"})}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is enabled, ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," that follows the ",(0,s.jsx)(e.code,{children:'"displayFormat"'})," defined in the ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "datetimeParam",\n                                "value": "06:00"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n'})}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsx)(e.p,{children:"The time parameter to be sent is not a timestamp and does not contain any time zone information. The plugin executes the command of datetime parameter according to the device's time zone."})}),"\n",(0,s.jsx)(e.h3,{id:"switch",children:"Switch"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a switch toggle for parameter input. The switch toggle is used to switch between two parameters. You must define ",(0,s.jsx)(e.code,{children:'"displayValues"'})," as a size 2 Array, with index 0 representing false and index 1 representing true."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n    ...\n    "configs": [\n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "switchParam",\n                    "displayType": "switch",\n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:\n",(0,s.jsx)(e.img,{alt:"config-display-type-switch",src:i(6369).A+"",width:"587",height:"310"})]}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is set up, ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," that follows the ",(0,s.jsx)(e.code,{children:'"displayValues"'})," defined in the ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "switchParam",\n                                "value": "offValue"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"checkbox",children:"Checkbox"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a checkbox for parameter input. The checkbox is used to enable or disable the parameter. You must define ",(0,s.jsx)(e.code,{children:'"displayValues"'})," as a size 2 Array, with index 0 representing false and index 1 representing true."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n    ...\n    "configs": [\n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "checkboxParam",\n                    "displayType": "checkbox",\n                    "displayValues": [\n                        "offValue",\n                        "onValue"\n                    ],\n                    "defaultValue": "offValue",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-display-type-checkbox",src:i(7970).A+"",width:"590",height:"320"})}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is set up, ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," that follows the ",(0,s.jsx)(e.code,{children:'"displayValues"'})," defined in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "checkboxParam",\n                                "value": "offValue"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"list",children:"List"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a dropdown list for parameter input. You must define ",(0,s.jsx)(e.code,{children:'"displayValues"'})," as the ",(0,s.jsx)(e.strong,{children:"Array"})," type."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n    ...\n    "configs": [\n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "listParam",\n                    "displayType": "list",\n                    "displayValues": [\n                        "list1",\n                        "list2"\n                    ],\n                    "defaultValue": "list1",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-display-type-list",src:i(3445).A+"",width:"581",height:"312"})}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is set up, ",(0,s.jsx)(e.code,{children:"v2/notifyPluginConfigUpdate"})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," that follows the ",(0,s.jsx)(e.code,{children:'"displayValues"'})," defined in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n   "jsonrpc": "2.0",\n   "method": "v2/notifyPluginConfigUpdate",\n   ...\n       ...\n           ...\n               "configs": [\n                   {\n                       "name": "config1",\n                       "params": [\n                           {\n                               "name": "listParam",\n                               "value": "list1"\n                           }\n                           ...\n                       ]\n                       ...\n                   }\n                   ...\n               ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"temperature",children:"Temperature"}),"\n",(0,s.jsxs)(e.p,{children:["The following example shows the code in ",(0,s.jsx)(e.code,{children:"v2/notifyPluginUpdate.json"})," for displaying a predefined temperature scale for parameter input. Users can enter temperature parameters in Fahrenheit or Celsius."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginUpdate.json"',children:'{\n    ...\n    "configs": [\n        {\n            "name": "config1",\n            "params": [\n                {\n                    "name": "temperatureParam",\n                    "displayType": "temperature",\n                    "required": false,\n                    ...\n                }\n            ],\n            ...\n        }\n    ],\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.strong,{children:"Configs"})," card displays as follows:"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"config-display-type-temperature",src:i(3367).A+"",width:"584",height:"313"})}),"\n",(0,s.jsxs)(e.p,{children:["When a configuration is set up, ",(0,s.jsx)(e.code,{children:'"v2/notifyPluginConfigUpdate"'})," carries a ",(0,s.jsx)(e.code,{children:'"name"'})," and a ",(0,s.jsx)(e.code,{children:'"value"'})," from the temperature parameter input."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",metastring:'title="v2/notifyPluginConfigUpdate.json"',children:'{\n    "jsonrpc": "2.0",\n    "method": "v2/notifyPluginConfigUpdate",\n    ...\n        ...\n            ...\n                "configs": [\n                    {\n                        "name": "config1",\n                        "params": [\n                            {\n                                "name": "temperatureParam",\n                                "value": "301.15"\n                            }\n                            ...\n                        ]\n                        ...\n                    }\n                    ...\n                ]\n}\n'})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsxs)(e.p,{children:["While the Fahrenheit and Celsius scales are used on the Portal, the temperature data sent to the plugin needs to be in ",(0,s.jsx)(e.strong,{children:"Kelvin"}),"."]})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},7970:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-checkbox-06216ce94948bcf89e9b3354e64d1522.png"},8706:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-datetime-fb1e9cd66f2313be453d471fa70acf87.png"},3445:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-list-539739773070e1f59b9580f8ec86a085.png"},3582:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-string-4942ae7a2c87b6e41f85ad97b2bd55b0.png"},6369:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-switch-839830a854b954683a1413da97114b32.png"},3367:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-display-type-temperature-2a186b35064ed380acb9dc87118f664c.png"},9812:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-init-faaa0b12c9e83676e1acfb2d645c74e4.svg"},5773:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-sequence-de8f5182fafca0c3c52f9d787b282b39.svg"},9906:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-set-finished-03ca8c249b1c3e5600c840b083aa3f27.png"},7402:(n,e,i)=>{i.d(e,{A:()=>s});const s=i.p+"assets/images/config-set-param-6c41ee1519e67c7609c58c95bc8d64d4.svg"},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>r});var s=i(6540);const t={},a=s.createContext(t);function o(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);